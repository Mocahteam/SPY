{
	"referentials": [
		{
			"name": "SPY",
			"list": [
				{
					"key": "SPY_StepByStep",
					"parentKey": "",
					"name": "Résoudre un problème en plusieurs étapes",
					"description": "Cette fonctionnalité du jeu permet au joueur de décomposer la résolution du problème en sous étapes. Le joueur peut alors exécuter quelques blocs, analyser la situation après le déplacement et poursuivre sa résolution.",
					"constraints": [
						{
							"label": "ExecutionLimit",
							"tag": "executionLimit",
							"parameters": [
								{
									"attribute": "amount",
									"constraint": "<=",
									"value": "1"
								}
							]
						}
					],
					"rule": "ExecutionLimit = 0"
				},
				{
					"key": "SPY_Fog",
					"parentKey": "",
					"name": "Traduire en langage informatique une consigne exprimée en langage naturel",
					"description": "Active un filtre qui empêche le joueur de voir toute la scène et donc d'avoir une vision globale du problème. La consigne indique en langage naturel comment résoudre le problème et le joueur doit la traduire en langage formel compréhensible par le robot (utilisation des blocs de programmation du jeu).",
					"constraints": [
						{
							"label": "Fog",
							"tag": "fog",
							"parameters": []
						}
					],
					"rule": "Fog >= 1"
				},
				{
					"key": "SPY_ActiveDoor",
					"parentKey": "",
					"name": "Ouvrir/Fermer une porte",
					"description": "Être capable de changer l'état d'un objet, ouvrir/fermer une porte.",
					"constraints": [
						{
							"label": "DoorWithSlotConnected",
							"tag": "door",
							"parameters": [
								{
									"attribute": "slotId",
									"constraint": "sameValue",
									"tag2": "slot",
									"attribute2": "slotId"
								}
							]
						},
						{
							"label": "activateInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "Activate"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "activateInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "Activate"
								}
							]
						}
						
					],
					"rule": "DoorWithSlotConnected >= 1 and (activateInLib >= 1 or activateInScript >= 1)"
				},
				{
					"key": "SPY_ScriptEditable",
					"parentKey": "",
					"name": "Nommer une sequence d'action",
					"description": "Être capable de nommer le canal de communication à utiliser pour cibler le robot à commander.",
					"constraints": [
						{
							"label": "ScriptEditable",
							"tag": "script",
							"parameters": [
								{
									"attribute": "editMode",
									"constraint": "=",
									"value": "2"
								}
							]
						}
					],
					"rule": "ScriptEditable > 0"
				},
				{
					"key": "SPY_SelectRightScript",
					"parentKey": "",
					"name": "Identifier la bonne solution",
					"description": "Étant donné plusieurs solutions données, être capable d'identifier une solution permettant de résoudre le problème.",
					"constraints": [
						{
							"label": "DragDropDisabled",
							"tag": "dragdropDisabled",
							"parameters": []
						},
						{
							"label": "ScriptEditable",
							"tag": "script",
							"parameters": [
								{
									"attribute": "editMode",
									"constraint": "=",
									"value": "2"
								}
							]
						},
						{
							"label": "AllScript",
							"tag": "script",
							"parameters": []
						},
						{
							"label": "CorrectScript",
							"tag": "script",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "include",
									"value": "0|1"
								}
							]
						}
					],
					"rule": "CorrectScript >= 1 and DragDropDisabled >= 1 and ScriptEditable = AllScript"
				},
				{
					"key": "SPY_CorrectBuggedScript",
					"parentKey": "",
					"name": "Corriger une solution erronée",
					"description": "Étant donné une solution erronée, être capable d'identifier le problème et de le corriger.",
					"constraints": [
						{
							"label": "DragDropDisabled",
							"tag": "dragdropDisabled",
							"parameters": []
						},
						{
							"label": "AllScript",
							"tag": "script",
							"parameters": []
						},
						{
							"label": "BuggedScript",
							"tag": "script",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "2"
								}
							]
						}
					],
					"rule": "BuggedScript >= 1 and DragDropDisabled = 0 and BuggedScript = AllScript"
				},
				{
					"key": "SPY_EnemyInGame",
					"parentKey": "",
					"name": "Prédire le résultat d'une séquence d'actions",
					"description": "Être capable d'anticiper les actions d'un ennemi afin d'adapter sa solution en conséquence.",
					"constraints": [
						{
							"label": "ScriptWithContent",
							"tag": "script",
							"parameters": [
								{
									"attribute": "name",
									"constraint": "sameValue",
									"tag2": "enemy",
									"attribute2": "associatedScriptName"
								},
								{
									"constraint": "hasChild"
								}
							]
						}
					],
					"rule": "ScriptWithContent > 0"
				},
				{
					"key": "SPY_RobotsInSameLine",
					"parentKey": "",
					"name": "Généraliser une solution",
					"description": "Etre capable de trouver une solution permettant de résoudre deux problèmes différents. Autrement dit, une ligne de communication pour plusieurs robots.",
					"constraints": [
						{
							"label": "RobotsInSameLine",
							"tag": "player",
							"parameters": [
								{
									"attribute": "associatedScriptName",
									"constraint": "sameValue",
									"tag2": "player",
									"attribute2": "associatedScriptName"
								}
							]
						}
					],
					"rule": "RobotsInSameLine >= 2"
				},
				{
					"key": "SPY_Blocs",
					"parentKey": "",
					"name": "Gestions des blocs",
					"description": "",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "SPY_Limitations",
					"parentKey": "SPY_Blocs",
					"name": "Limitation de blocs",
					"description": "",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "SPY_Unlimited",
					"parentKey": "SPY_Limitations",
					"name": "Blocs illimités",
					"description": "Ne donner au joueur que des blocs en quantité illimitée. Etre capable de déterminer quand utiliser des blocs.",
					"constraints": [
						{
							"label": "limitedBlocks",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "-1"
								}
							]
						},
						{
							"label": "infiniteBlocks",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "limit",
									"constraint": "=",
									"value": "-1"
								}
							]
						}
					],
					"rule": "limitedBlocks = 0 and infiniteBlocks >= 1"
				},
				{
					"key": "SPY_Limited",
					"parentKey": "SPY_Limitations",
					"name": "Blocs limités",
					"description": "Ne donner au joueur que des blocs en quantité limitée. Etre capable de combiner des actions dans un ordre valide.",
					"constraints": [
						{
							"label": "unlimitedBlocks",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "limit",
									"constraint": "=",
									"value": "-1"
								}
							]
						}
					],
					"rule": "unlimitedBlocks = 0"
				},
				{
					"key": "SPY_Actions",
					"parentKey": "SPY_Blocs",
					"name": "Liste des blocs d'action",
					"description": "",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "SPY_Action_MoveForward",
					"parentKey": "SPY_Actions",
					"name": "Bloc action \"Avancer\"",
					"description": "Donner au joueur la possibilité d'utiliser des blocs \"Avancer\".",
					"constraints": [
						{
							"label": "moveInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "Forward"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "moveInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "Forward"
								}
							]
						}
					],
					"rule": "moveInLib >= 1 or moveInScript >= 1"
				},
				{
					"key": "SPY_Action_TurnLeft",
					"parentKey": "SPY_Actions",
					"name": "Bloc action \"Pivoter à gauche\"",
					"description": "Donner au joueur la possibilité d'utiliser des blocs \"Pivoter à gauche\".",
					"constraints": [
						{
							"label": "leftInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "TurnLeft"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "leftInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "TurnLeft"
								}
							]
						}
					],
					"rule": "leftInLib >= 1 or leftInScript >= 1"
				},
				{
					"key": "SPY_Action_TurnRight",
					"parentKey": "SPY_Actions",
					"name": "Bloc action \"Pivoter à droite\"",
					"description": "Donner au joueur la possibilité d'utiliser des blocs \"Pivoter à droite\".",
					"constraints": [
						{
							"label": "rightInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "TurnRight"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "rightInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "TurnRight"
								}
							]
						}
					],
					"rule": "rightInLib >= 1 or rightInScript >= 1"
				},
				{
					"key": "SPY_Action_Wait",
					"parentKey": "SPY_Actions",
					"name": "Bloc action \"Attendre\"",
					"description": "Donner au joueur la possibilité d'utiliser des blocs \"Attendre\".",
					"constraints": [
						{
							"label": "waitInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "Wait"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "waitInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "Wait"
								}
							]
						}
					],
					"rule": "waitInLib >= 1 or waitInScript >= 1"
				},
				{
					"key": "SPY_Action_Activate",
					"parentKey": "SPY_Actions",
					"name": "Bloc action \"Activer\"",
					"description": "Donner au joueur la possibilité d'utiliser des blocs \"Activer\".",
					"constraints": [
						{
							"label": "activateInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "Activate"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "activateInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "Activate"
								}
							]
						}
					],
					"rule": "activateInLib >= 1 or activateInScript >= 1"
				},
				{
					"key": "SPY_Action_TurnBack",
					"parentKey": "SPY_Actions",
					"name": "Bloc action \"Se retourner\"",
					"description": "Donner au joueur la possibilité d'utiliser des blocs \"Se retourner\".",
					"constraints": [
						{
							"label": "turnBackInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "TurnBack"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "turnBackInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "TurnBack"
								}
							]
						}
					],
					"rule": "turnBackInLib >= 1 or turnBackInScript >= 1"
				},
				{
					"key": "SPY_Controls",
					"parentKey": "SPY_Blocs",
					"name": "Liste des blocs de contrôle",
					"description": "",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "SPY_Control_IfThen",
					"parentKey": "SPY_Controls",
					"name": "Bloc de contrôle \"Si\"",
					"description": "Donner au joueur la possibilité d'utiliser des blocs \"Si\".",
					"constraints": [
						{
							"label": "ifThenInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "IfThen"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "ifThenInScript",
							"tag": "if",
							"parameters": []
						}
					],
					"rule": "ifThenInLib >= 1 or ifThenInScript >= 1"
				},
				{
					"key": "SPY_Control_IfElse",
					"parentKey": "SPY_Controls",
					"name": "Bloc de contrôle \"Si/Sinon\"",
					"description": "Donner au joueur la possibilité d'utiliser des blocs \"Si/Sinon\".",
					"constraints": [
						{
							"label": "ifElseInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "IfElse"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "ifElseInScript",
							"tag": "ifElse",
							"parameters": []
						}
					],
					"rule": "ifElseInLib >= 1 or ifElseInScript >= 1"
				},
				{
					"key": "SPY_Control_ForLoop",
					"parentKey": "SPY_Controls",
					"name": "Bloc de contrôle \"Répéter plusieurs fois\"",
					"description": "Donner au joueur la possibilité d'utiliser des blocs \"Répéter plusieurs fois\".",
					"constraints": [
						{
							"label": "forLoopInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "ForLoop"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "forLoopInScript",
							"tag": "for",
							"parameters": []
						}
					],
					"rule": "forLoopInLib >= 1 or forLoopInScript >= 1"
				},
				{
					"key": "SPY_Control_While",
					"parentKey": "SPY_Controls",
					"name": "Bloc de contrôle \"Tant que\"",
					"description": "Donner au joueur la possibilité d'utiliser des blocs \"Tant que\".",
					"constraints": [
						{
							"label": "whileInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "While"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "whileInScript",
							"tag": "while",
							"parameters": []
						}
					],
					"rule": "whileInLib >= 1 or whileInScript >= 1"
				},
				{
					"key": "SPY_Control_Forever",
					"parentKey": "SPY_Controls",
					"name": "Bloc de contrôle \"Répéter sans fin\"",
					"description": "Donner au joueur la possibilité d'utiliser des blocs \"Répéter sans fin\".",
					"constraints": [
						{
							"label": "foreverInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "Forever"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "foreverInScript",
							"tag": "forever",
							"parameters": []
						}
					],
					"rule": "foreverInLib >= 1 or foreverInScript >= 1"
				},
				{
					"key": "SPY_Operators",
					"parentKey": "SPY_Blocs",
					"name": "Liste des opérateurs de contrôle",
					"description": "",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "SPY_Operator_And",
					"parentKey": "SPY_Operators",
					"name": "Opérateur de contrôle \"Et\"",
					"description": "Donner au joueur la possibilité d'utiliser des blocs \"Et\".",
					"constraints": [
						{
							"label": "andInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "AndOperator"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "andInScript",
							"tag": "and",
							"parameters": []
						}
					],
					"rule": "andInLib >= 1 or andInScript >= 1"
				},
				{
					"key": "SPY_Operator_Or",
					"parentKey": "SPY_Operators",
					"name": "Opérateur de contrôle \"Ou\"",
					"description": "Donner au joueur la possibilité d'utiliser des blocs \"0u\".",
					"constraints": [
						{
							"label": "orInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "OrOperator"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "orInScript",
							"tag": "or",
							"parameters": []
						}
					],
					"rule": "orInLib >= 1 or orInScript >= 1"
				},
				{
					"key": "SPY_Operator_Not",
					"parentKey": "SPY_Operators",
					"name": "Opérateur de contrôle \"Non\"",
					"description": "Donner au joueur la possibilité d'utiliser des blocs \"Non\".",
					"constraints": [
						{
							"label": "notInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "NotOperator"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "notInScript",
							"tag": "not",
							"parameters": []
						}
					],
					"rule": "notInLib >= 1 or notInScript >= 1"
				},
				{
					"key": "SPY_Captors",
					"parentKey": "SPY_Blocs",
					"name": "Liste des capteurs",
					"description": "",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "SPY_Captor_WallFront",
					"parentKey": "SPY_Captors",
					"name": "Capteur \"Mur détecté en face\"",
					"description": "Donner au joueur la possibilité d'utiliser des capteurs \"Mur détecté en face\".",
					"constraints": [
						{
							"label": "wallFrontInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "WallFront"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "wallFrontInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "WallFront"
								}
							]
						}
					],
					"rule": "wallFrontInLib >= 1 or wallFrontInScript >= 1"
				},
				{
					"key": "SPY_Captor_WallLeft",
					"parentKey": "SPY_Captors",
					"name": "Capteur \"Mur détecté à gauche\"",
					"description": "Donner au joueur la possibilité d'utiliser des capteurs \"Mur détecté à gauche\".",
					"constraints": [
						{
							"label": "wallLeftInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "WallLeft"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "wallLeftInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "WallLeft"
								}
							]
						}
					],
					"rule": "wallLeftInLib >= 1 or wallLeftInScript >= 1"
				},
				{
					"key": "SPY_Captor_WallRight",
					"parentKey": "SPY_Captors",
					"name": "Capteur \"Mur détecté à droite\"",
					"description": "Donner au joueur la possibilité d'utiliser des capteurs \"Mur détecté à droite\".",
					"constraints": [
						{
							"label": "wallRightInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "WallRight"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "wallRightInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "WallRight"
								}
							]
						}
					],
					"rule": "wallRightInLib >= 1 or wallRightInScript >= 1"
				},
				{
					"key": "SPY_Captor_PathFront",
					"parentKey": "SPY_Captors",
					"name": "Capteur \"Passage détecté en face\"",
					"description": "Donner au joueur la possibilité d'utiliser des capteurs \"Passage détecté en face\".",
					"constraints": [
						{
							"label": "pathFrontInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "PathFront"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "pathFrontInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "PathFront"
								}
							]
						}
					],
					"rule": "pathFrontInLib >= 1 or pathFrontInScript >= 1"
				},
				{
					"key": "SPY_Captor_PathLeft",
					"parentKey": "SPY_Captors",
					"name": "Capteur \"Passage détecté à gauche\"",
					"description": "Donner au joueur la possibilité d'utiliser des capteurs \"Passage détecté à gauche\".",
					"constraints": [
						{
							"label": "pathLeftInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "PathLeft"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "pathLeftInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "PathLeft"
								}
							]
						}
					],
					"rule": "pathLeftInLib >= 1 or pathLeftInScript >= 1"
				},
				{
					"key": "SPY_Captor_PathRight",
					"parentKey": "SPY_Captors",
					"name": "Capteur \"Passage détecté à droite\"",
					"description": "Donner au joueur la possibilité d'utiliser des capteurs \"Passage détecté à droite\".",
					"constraints": [
						{
							"label": "pathRightInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "PathRight"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "pathRightInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "PathRight"
								}
							]
						}
					],
					"rule": "pathRightInLib >= 1 or pathRightInScript >= 1"
				},
				{
					"key": "SPY_Captor_Enemy",
					"parentKey": "SPY_Captors",
					"name": "Capteur \"Ennemi détecté en face\"",
					"description": "Donner au joueur la possibilité d'utiliser des capteurs \"Ennemi détecté en face\".",
					"constraints": [
						{
							"label": "enemyInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "Enemy"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "enemyInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "Enemy"
								}
							]
						}
					],
					"rule": "enemyInLib >= 1 or enemyInScript >= 1"
				},
				{
					"key": "SPY_Captor_RedArea",
					"parentKey": "SPY_Captors",
					"name": "Capteur \"Zone surveillée en face\"",
					"description": "Donner au joueur la possibilité d'utiliser des capteurs \"Zone surveillée en face\".",
					"constraints": [
						{
							"label": "redAreaInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "RedArea"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "redAreaInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "RedArea"
								}
							]
						}
					],
					"rule": "redAreaInLib >= 1 or redAreaInScript >= 1"
				},
				{
					"key": "SPY_Captor_FieldGate",
					"parentKey": "SPY_Captors",
					"name": "Capteur \"Porte détectée en face\"",
					"description": "Donner au joueur la possibilité d'utiliser des capteurs \"Porte détectée en face\".",
					"constraints": [
						{
							"label": "fieldGateInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "FieldGate"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "fieldGateInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "FieldGate"
								}
							]
						}
					],
					"rule": "fieldGateInLib >= 1 or fieldGateInScript >= 1"
				},
				{
					"key": "SPY_Captor_Terminal",
					"parentKey": "SPY_Captors",
					"name": "Capteur \"Terminal détecté sur ma position\"",
					"description": "Donner au joueur la possibilité d'utiliser des capteurs \"Terminal détecté sur ma position\".",
					"constraints": [
						{
							"label": "terminalInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "Terminal"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "terminalInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "Terminal"
								}
							]
						}
					],
					"rule": "terminalInLib >= 1 or terminalInScript >= 1"
				},
				{
					"key": "SPY_Captor_Exit",
					"parentKey": "SPY_Captors",
					"name": "Capteur \"Sortie détectée sur ma position\"",
					"description": "Donner au joueur la possibilité d'utiliser des capteurs \"Sortie détectée sur ma position\".",
					"constraints": [
						{
							"label": "exitInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "Exit"
								},
								{
									"attribute": "limit",
									"constraint": "<>",
									"value": "0"
								}
							]
						},
						{
							"label": "exitInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "Exit"
								}
							]
						}
					],
					"rule": "exitInLib >= 1 or exitInScript >= 1"
				}
			]
		},
		{
			"name": "PIAF",
			"list": [
				{
					"key": "C1",
					"parentKey": "",
					"name": "C1 Définir des abstractions / généraliser",
					"description": "Le PIAF est un référentiel de compétences de la Pensée Informatique et Algorithmique dans l'enseignement Fondamental (PIAF). Il est décomposé en 6 compétences maîtresses.",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "C1.1",
					"parentKey": "C1",
					"name": "C1.1 Nommer des objets et séquence d'actions",
					"description": "Être capable de donner des noms à des objets, des actions et des séquences d'actions.",
					"constraints": [
						{
							"label": "ScriptEditable",
							"tag": "script",
							"parameters": [
								{
									"attribute": "editMode",
									"constraint": "=",
									"value": "2"
								}
							]
						}
					],
					"rule": "ScriptEditable > 0"
				},
				{
					"key": "C1.2",
					"parentKey": "C1",
					"name": "C1.2 Différencier objet et action, et actions atomiques et non-atomiques",
					"description": "Être capable de dire si quelque chose (image, expression, phrase) fait référence à un objet, à une action, ou bien à une séquence d'actions.",
					"constraints": [
						{
							"label": "ActionInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "ActionInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								}
							]
						},
						{
							"label": "TurnLeftInLib_x1",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "TurnLeft"
								},
								{
									"attribute": "limit",
									"constraint": ">=",
									"value": "1"
								}
							]
						},
						{
							"label": "TurnRightInLib_x1",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "TurnRight"
								},
								{
									"attribute": "limit",
									"constraint": ">=",
									"value": "1"
								}
							]
						},
						{
							"label": "TurnLeftInLib_x2",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "TurnLeft"
								},
								{
									"attribute": "limit",
									"constraint": ">=",
									"value": "2"
								}
							]
						},
						{
							"label": "TurnRightInLib_x2",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "TurnRight"
								},
								{
									"attribute": "limit",
									"constraint": ">=",
									"value": "2"
								}
							]
						},
						{
							"label": "TurnLeftInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "TurnLeft"
								}
							]
						},
						{
							"label": "TurnRightInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "TurnRight"
								}
							]
						},
						{
							"label": "TurnBackInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "TurnBack"
								},
								{
									"attribute": "limit",
									"constraint": ">=",
									"value": "1"
								}
							]
						},
						{
							"label": "TurnBackInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "TurnBack"
								}
							]
						},
						{
							"label": "CaptorInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "WallFront|WallLeft|WallRight|PathFront|PathLeft|PathRight|Enemy|RedArea|FieldGate|Terminal|Exit"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "CaptorInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "include",
									"value": "WallFront|WallLeft|WallRight|PathFront|PathLeft|PathRight|Enemy|RedArea|FieldGate|Terminal|Exit"
								}
							]
						}
					],
					"rule": "((TurnBackInLib + TurnBackInScript) >= 1 and (TurnLeftInLib_x2 >= 1 or (TurnLeftInLib_x1 + TurnLeftInScript) >= 2 or TurnRightInLib_x2 >= 1 or (TurnRightInLib_x1 + TurnRightInScript) >= 2 )) or ((ActionInLib >= 1 or ActionInScript >= 1) and (CaptorInLib >= 1 or CaptorInScript >= 1))"
				},
				{
					"key": "C1.3",
					"parentKey": "C1",
					"name": "C1.3 Identifier les paramètres d'entrée d'une séquence d'actions",
					"description": "Être capable de dire ce qui est requis (objet ou séquence d'actions) pour effectuer une séquence d'actions.",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "C1.4",
					"parentKey": "C1",
					"name": "C1.4 Décrire le résultat d'une séquence d'actions",
					"description": "Après avoir exécuté une séquence d'actions (qu'il s'agisse d'une séquence informelle, d'un algorithme, ou d'un programme), être capable de décrire cette séquence. L'apprenant doit décrire la situation finale (quels objets ont éventuellement été modifiés / créés / supprimés, ou quelle solution à un problème a été trouvée).",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "C1.5",
					"parentKey": "C1",
					"name": "C1.5 Prédire le résultat d'une séquence d'actions",
					"description": "Être capable de dire, à partir d'une séquence d'actions, ce qui se passera si elle est exécutée. Contrairement à la compétence 1.4, cette compétence consiste à fournir une prédiction sans exécuter réellement la séquence d'actions.",
					"constraints": [
						{
							"label": "EnemyWithScriptAndRange",
							"tag": "enemy",
							"parameters": [
								{
									"attribute": "associatedScriptName",
									"constraint": "sameValue",
									"tag2": "script",
									"attribute2": "name"
								},
								{
									"attribute": "range",
									"constraint": ">=",
									"value": "1"
								}
							]
						},
						{
							"label": "EnemyWithScriptAndSelf",
							"tag": "enemy",
							"parameters": [
								{
									"attribute": "associatedScriptName",
									"constraint": "sameValue",
									"tag2": "script",
									"attribute2": "name"
								},
								{
									"attribute": "selfRange",
									"constraint": "=",
									"value": "True"
								}
							]
						},
						{
							"label": "ScriptWithContent",
							"tag": "script",
							"parameters": [
								{
									"attribute": "name",
									"constraint": "sameValue",
									"tag2": "enemy",
									"attribute2": "associatedScriptName"
								},
								{
									"constraint": "hasChild"
								}
							]
						}
					],
					"rule": "(EnemyWithScriptAndRange = ScriptWithContent or EnemyWithScriptAndSelf = ScriptWithContent) and ScriptWithContent <> 0"
				},
				{
					"key": "C1.6",
					"parentKey": "C1",
					"name": "C1.6 Utiliser des objets dont la valeur peut changer",
					"description": "Être capable de manipuler des valeurs qui peuvent varier en fonction du contexte, en utilisant des abstractions nommées (appelées également des identificateurs ou encore identifiants).",
					"constraints": [
						{
							"label": "CaptorInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "WallFront|WallLeft|WallRight|PathFront|PathLeft|PathRight|Enemy|RedArea|FieldGate|Terminal|Exit"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "CaptorInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "include",
									"value": "WallFront|WallLeft|WallRight|PathFront|PathLeft|PathRight|Enemy|RedArea|FieldGate|Terminal|Exit"
								}
							]
						},
						{
							"label": "ControlInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "While|IfThen|IfElse"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "IfInScript",
							"tag": "if",
							"parameters": []
						},
						{
							"label": "IfElseInScript",
							"tag": "ifElse",
							"parameters": []
						},
						{
							"label": "WhileInScript",
							"tag": "while",
							"parameters": []
						},
						{
							"label": "ActionInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "ActionInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								}
							]
						},
						{
							"label": "ActivateInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "Activate"
								},
								{
									"attribute": "limit",
									"constraint": ">=",
									"value": "1"
								}
							]
						},
						{
							"label": "ActivateInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "Activate"
								}
							]
						},
						{
							"label": "DoorWithSlotConnected",
							"tag": "door",
							"parameters": [
								{
									"attribute": "slotId",
									"constraint": "sameValue",
									"tag2": "slot",
									"attribute2": "slotId"
								}
							]
						}
						
					],
					"rule": "((ActionInLib + ActionInScript) >= 1 and (CaptorInLib + CaptorInScript) >= 1 and (ControlInLib + IfInScript + IfElseInScript + WhileInScript) >= 1) or DoorWithSlotConnected >= 1"
				},
				{
					"key": "C1.7",
					"parentKey": "C1",
					"name": "C1.7 Reconnaître, parmi des objets et séquences d’actions connus, lesquels peuvent être utilisés pour atteindre un nouvel objectif",
					"description": "Étant donné un nouveau problème (c'est-à-dire que la solution est a priori inconnue), être capable de réaliser qu'il est similaire à un problème connu dont il est possible de réutiliser tout ou une partie de la solution pour résoudre ce nouveau problème.",
					"constraints": [
						{
							"label": "DragDropDisabled",
							"tag": "dragdropDisabled",
							"parameters": []
						},
						{
							"label": "ScriptEditable",
							"tag": "script",
							"parameters": [
								{
									"attribute": "editMode",
									"constraint": "=",
									"value": "2"
								}
							]
						},
						{
							"label": "AllScript",
							"tag": "script",
							"parameters": []
						},
						{
							"label": "CorrectScript",
							"tag": "script",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "0"
								}
							]
						}
					],
					"rule": "CorrectScript >= 1 and DragDropDisabled >= 1 and ScriptEditable = AllScript"
				},
				{
					"key": "C2",
					"parentKey": "",
					"name": "C2 Composer / Décomposer une séquence d'actions",
					"description": "Le PIAF est un référentiel de compétences de la Pensée Informatique et Algorithmique dans l'enseignement Fondamental (PIAF). Il est décomposé en 6 compétences maîtresses.",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "C2.1",
					"parentKey": "C2",
					"name": "C2.1 Ordonner une séquence d'actions pour atteindre un objectif",
					"description": "Étant donné une liste non ordonnée d'actions et un but, être capable de combiner ces actions dans un ordre valide pour construire une séquence qui permet d'atteindre ce but.",
					"constraints": [
						{
							"label": "AvailableActionInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "ActionInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								}
							]
						},
						{
							"label": "UnlimitedActionInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "limit",
									"constraint": "=",
									"value": "-1"
								}
							]
						},
						{
							"label": "DragDropDisabled",
							"tag": "dragdropDisabled",
							"parameters": []
						}
					],
					"rule": "UnlimitedActionInLib = 0 and DragDropDisabled = 0 and (AvailableActionInLib >= 1 or ActionInScript >= 1)"
				},
				{
					"key": "C2.2",
					"parentKey": "C2",
					"name": "C2.2 Compléter une séquence d'actions pour atteindre un objectif simple",
					"description": "Étant donné une séquence d'actions limitée et un objectif simple (c'est-à-dire ne s'appuyant pas sur des concepts avancés comme les conditions et les boucles), être capable d'ajouter les actions manquantes à la séquence pour atteindre l'objectif.",
					"constraints": [
						{
							"label": "AllScript",
							"tag": "script",
							"parameters": []
						},
						{
							"label": "BuggedScript",
							"tag": "script",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "2"
								}
							]
						},
						{
							"label": "AvailableActionInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "ActionInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								}
							]
						},
						{
							"label": "ControlInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "ForLoop|Forever|While|IfThen|IfElse"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "IfInScript",
							"tag": "if",
							"parameters": []
						},
						{
							"label": "IfElseInScript",
							"tag": "ifElse",
							"parameters": []
						},
						{
							"label": "ForInScript",
							"tag": "for",
							"parameters": []
						},
						{
							"label": "WhileInScript",
							"tag": "while",
							"parameters": []
						},
						{
							"label": "ForeverInScript",
							"tag": "forever",
							"parameters": []
						}
					],
					"rule": "BuggedScript = AllScript and (AvailableActionInLib >=1 or ActionInScript >= 1) and ControlInLib = 0 and IfInScript = 0 and IfElseInScript = 0 and ForInScript = 0 and WhileInScript = 0 and ForeverInScript = 0"
				},
				{
					"key": "C2.3",
					"parentKey": "C2",
					"name": "C2.3 Créer une séquence d'actions pour atteindre un objectif simple",
					"description": "Étant donné un objectif simple (c'est-à-dire ne s'appuyant pas sur des concepts avancés comme les conditions et les boucles), être capable d'identifier toutes les actions nécessaires et les mettre dans le bon ordre.",
					"constraints": [
						{
							"label": "AvailableActionInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "ActionInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								}
							]
						},
						{
							"label": "DragDropDisabled",
							"tag": "dragdropDisabled",
							"parameters": []
						},
						{
							"label": "ControlInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "ForLoop|Forever|While|IfThen|IfElse"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "IfInScript",
							"tag": "if",
							"parameters": []
						},
						{
							"label": "IfElseInScript",
							"tag": "ifElse",
							"parameters": []
						},
						{
							"label": "ForInScript",
							"tag": "for",
							"parameters": []
						},
						{
							"label": "WhileInScript",
							"tag": "while",
							"parameters": []
						},
						{
							"label": "ForeverInScript",
							"tag": "forever",
							"parameters": []
						}
					],
					"rule": "DragDropDisabled = 0 and (AvailableActionInLib >= 1 or ActionInScript >= 1) and ControlInLib = 0 and IfInScript = 0 and IfElseInScript = 0 and ForInScript = 0 and WhileInScript = 0 and ForeverInScript = 0"
				},
				{
					"key": "C2.4",
					"parentKey": "C2",
					"name": "C2.4 Créer une séquence d'actions pour atteindre un objectif complexe",
					"description": "Étant donné un objectif complexe (c'est-à-dire un objectif exigeant des conditions simples ou complexes ou des boucles), être capable de définir une séquence d'actions permettant de réaliser cet objectif (i.e., identifier et combiner correctement les actions nécessaires).",
					"constraints": [
						{
							"label": "AvailableActionInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "ActionInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								}
							]
						},
						{
							"label": "DragDropDisabled",
							"tag": "dragdropDisabled",
							"parameters": []
						},
						{
							"label": "ControlInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "ForLoop|Forever|While|IfThen|IfElse"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "IfInScript",
							"tag": "if",
							"parameters": []
						},
						{
							"label": "IfElseInScript",
							"tag": "ifElse",
							"parameters": []
						},
						{
							"label": "ForInScript",
							"tag": "for",
							"parameters": []
						},
						{
							"label": "WhileInScript",
							"tag": "while",
							"parameters": []
						},
						{
							"label": "ForeverInScript",
							"tag": "forever",
							"parameters": []
						}
					],
					"rule": "DragDropDisabled = 0 and (AvailableActionInLib >= 1 or ActionInScript >= 1) and (ControlInLib >= 1 or IfInScript >= 1 or IfElseInScript >= 1 or ForInScript >= 1 or WhileInScript >= 1 or ForeverInScript >= 1)"
				},
				{
					"key": "C2.5",
					"parentKey": "C2",
					"name": "C2.5 Combiner des séquences d'actions pour atteindre un objectif",
					"description": "Étant donné des séquences d'actions permettant de réaliser certains objectifs, être capable de dire se celle-ci sont pertinentes pour un nouvel objectif, et si oui de les combiner (ordonner) pour réaliser celui-ci.",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "C2.6",
					"parentKey": "C2",
					"name": "C2.6 Décomposer des objectifs en sous-objectifs plus simples",
					"description": "Être capable de diviser un objectif complexe en plusieurs sous-objectifs qui peuvent être atteints plus facilement. Ceux-ci peuvent alors être réalisés par différentes personnes.",
					"constraints": [
						{
							"label": "ExecutionLimit",
							"tag": "executionLimit",
							"parameters": [
								{
									"attribute": "amount",
									"constraint": "<=",
									"value": "1"
								}
							]
						}
					],
					"rule": "ExecutionLimit = 0"
				},
				{
					"key": "C3",
					"parentKey": "",
					"name": "C3 Contrôler une séquence d'actions",
					"description": "Le PIAF est un référentiel de compétences de la Pensée Informatique et Algorithmique dans l'enseignement Fondamental (PIAF). Il est décomposé en 6 compétences maîtresses.",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "C3.1",
					"parentKey": "C3",
					"name": "C3.1 Répéter une séquence d'actions un nombre donné de fois",
					"description": "Être capable d'utiliser de manière appropriée les répétitions d'actions (ou de séquences d'actions) un certain nombre de fois, afin d'atteindre un objectif.",
					"constraints": [
						{
							"label": "DragDropDisabled",
							"tag": "dragdropDisabled",
							"parameters": []
						},
						{
							"label": "ForInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "ForLoop"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "ForInScript",
							"tag": "for",
							"parameters": []
						}
					],
					"rule": "DragDropDisabled = 0 and (ForInLib >= 1 or ForInScript >= 1)"
				},
				{
					"key": "C3.2",
					"parentKey": "C3",
					"name": "C3.2 Répéter une séquence d'actions jusqu'à ce qu'un objectif soit atteint",
					"description": "Être capable de contrôler les répétitions d'actions (ou de séquences d'actions) jusqu'à ce qu'une condition soit remplie, afin d'atteindre un objectif.",
					"constraints": [
						{
							"label": "DragDropDisabled",
							"tag": "dragdropDisabled",
							"parameters": []
						},
						{
							"label": "WhileInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "=",
									"value": "While"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "WhileInScript",
							"tag": "while",
							"parameters": []
						},
						{
							"label": "CaptorInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "WallFront|WallLeft|WallRight|PathFront|PathLeft|PathRight|Enemy|RedArea|FieldGate|Terminal|Exit"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "CaptorInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "include",
									"value": "WallFront|WallLeft|WallRight|PathFront|PathLeft|PathRight|Enemy|RedArea|FieldGate|Terminal|Exit"
								}
							]
						},
						{
							"label": "OperatorInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "AndOperator|OrOperator|NotOperator"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "AndInScript",
							"tag": "and",
							"parameters": []
						},
						{
							"label": "OrInScript",
							"tag": "or",
							"parameters": []
						},
						{
							"label": "NotInScript",
							"tag": "not",
							"parameters": []
						}
					],
					"rule": "DragDropDisabled = 0 and (WhileInLib >= 1 or WhileInScript >= 1) and (CaptorInLib >= 1 or CaptorInScript >= 1) and OperatorInLib = 0 and AndInScript = 0 and OrInScript = 0 and NotInScript = 0"
				},
				{
					"key": "C3.3",
					"parentKey": "C3",
					"name": "C3.3 Intégrer une condition simple dans une séquence d'actions",
					"description": "Être capable d'utiliser des conditions simples (reposant sur un critère) pour permettre (ou interdire) certaines séquences d'actions.",
					"constraints": [
						{
							"label": "DragDropDisabled",
							"tag": "dragdropDisabled",
							"parameters": []
						},
						{
							"label": "IfOrIfElseInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "IfThen|IfElse"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "IfInScript",
							"tag": "if",
							"parameters": []
						},
						{
							"label": "IfElseInScript",
							"tag": "ifElse",
							"parameters": []
						},
						{
							"label": "CaptorInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "WallFront|WallLeft|WallRight|PathFront|PathLeft|PathRight|Enemy|RedArea|FieldGate|Terminal|Exit"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "CaptorInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "include",
									"value": "WallFront|WallLeft|WallRight|PathFront|PathLeft|PathRight|Enemy|RedArea|FieldGate|Terminal|Exit"
								}
							]
						},
						{
							"label": "OperatorInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "AndOperator|OrOperator|NotOperator"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "AndInScript",
							"tag": "and",
							"parameters": []
						},
						{
							"label": "OrInScript",
							"tag": "or",
							"parameters": []
						},
						{
							"label": "NotInScript",
							"tag": "not",
							"parameters": []
						}
					],
					"rule": "DragDropDisabled = 0 and (IfOrIfElseInLib >= 1 or IfInScript >= 1 or IfElseInScript >= 1) and (CaptorInLib >= 1 or CaptorInScript >= 1) and OperatorInLib = 0 and AndInScript = 0 and OrInScript = 0 and NotInScript = 0"
				},
				{
					"key": "C3.4",
					"parentKey": "C3",
					"name": "C3.4 Intégrer une condition complexe dans une séquence d'actions",
					"description": "Être capable d'utiliser des conditions complexes (c'est-à-dire reposant sur plusieurs critères, qui sont combinés au moyen des opérateurs logiques \"et\", \"ou\", \"ne pas\") pour permettre (ou interdire) certaines séquences d'actions.",
					"constraints": [
						{
							"label": "DragDropDisabled",
							"tag": "dragdropDisabled",
							"parameters": []
						},
						{
							"label": "ControlInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "IfThen|IfElse|While"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "IfInScript",
							"tag": "if",
							"parameters": []
						},
						{
							"label": "IfElseInScript",
							"tag": "ifElse",
							"parameters": []
						},
						{
							"label": "WhileInScript",
							"tag": "while",
							"parameters": []
						},
						{
							"label": "CaptorInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "WallFront|WallLeft|WallRight|PathFront|PathLeft|PathRight|Enemy|RedArea|FieldGate|Terminal|Exit"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "CaptorInScript",
							"tag": "action",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "include",
									"value": "WallFront|WallLeft|WallRight|PathFront|PathLeft|PathRight|Enemy|RedArea|FieldGate|Terminal|Exit"
								}
							]
						},
						{
							"label": "OperatorInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "AndOperator|OrOperator|NotOperator"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "AndInScript",
							"tag": "and",
							"parameters": []
						},
						{
							"label": "OrInScript",
							"tag": "or",
							"parameters": []
						},
						{
							"label": "NotInScript",
							"tag": "not",
							"parameters": []
						}
					],
					"rule": "DragDropDisabled = 0 and (ControlInLib >= 1 or IfInScript >= 1 or IfElseInScript >= 1 or WhileInScript >= 1) and (CaptorInLib >= 1 or CaptorInScript >= 1) and (OperatorInLib >= 1 or AndInScript >= 1 or OrInScript >= 1 or NotInScript >= 1)"
				},
				{
					"key": "C4",
					"parentKey": "",
					"name": "C4 Évaluer des objets ou des séquences d'actions",
					"description": "Le PIAF est un référentiel de compétences de la Pensée Informatique et Algorithmique dans l'enseignement Fondamental (PIAF). Il est décomposé en 6 compétences maîtresses.",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "C4.1",
					"parentKey": "C4",
					"name": "C4.1 Comparer deux objets selon un critère donné",
					"description": "Étant donné deux objets et un critère de comparaison, être capable de comparer ces objets par rapport au critère.",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "C4.2",
					"parentKey": "C4",
					"name": "C4.2 Comparer deux séquences d'actions selon un critère donné",
					"description": "Être capable de comparer des séquences d'actions selon divers critères : en termes de lisibilité, de nombre de lignes, de temps d'exécution ou autre.",
					"constraints": [
						{
							"label": "DragDropDisabled",
							"tag": "dragdropDisabled",
							"parameters": []
						},
						{
							"label": "AllScript",
							"tag": "script",
							"parameters": []
						},
						{
							"label": "ScriptEditable",
							"tag": "script",
							"parameters": [
								{
									"attribute": "editMode",
									"constraint": "=",
									"value": "2"
								}
							]
						},
						{
							"label": "NonOptimalScript",
							"tag": "script",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "1"
								}
							]
						},
						{
							"label": "CorrectScript",
							"tag": "script",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "0"
								}
							]
						}
					],
					"rule": "DragDropDisabled >= 1 and AllScript = ScriptEditable and (CorrectScript + NonOptimalScript) = AllScript"
				},
				{
					"key": "C4.3",
					"parentKey": "C4",
					"name": "C4.3 Améliorer une séquence d'actions par rapport à un critère donné",
					"description": "Être capable de réfléchir à la possibilité d'améliorer une séquence d'actions par rapport à un critère et modifier cette séquence d'actions en conséquence.",
					"constraints": [
						{
							"label": "DragDropDisabled",
							"tag": "dragdropDisabled",
							"parameters": []
						},
						{
							"label": "AllScript",
							"tag": "script",
							"parameters": []
						},
						{
							"label": "NonOptimalScript",
							"tag": "script",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "1"
								}
							]
						},
						{
							"label": "ActionInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						}
					],
					"rule": "DragDropDisabled = 0 and AllScript = NonOptimalScript and ActionInLib >= 1"
				},
				{
					"key": "C5",
					"parentKey": "",
					"name": "C5 Manipuler des représentations formelles",
					"description": "Le PIAF est un référentiel de compétences de la Pensée Informatique et Algorithmique dans l'enseignement Fondamental (PIAF). Il est décomposé en 6 compétences maîtresses.",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "C5.1",
					"parentKey": "C5",
					"name": "C5.1 Représenter des objets ou séquences d'actions au moyen d'une représentation formelle",
					"description": "Être capable de représenter un objet ou une action en utilisant un mode de représentation défini avec précision (non ambigu).",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "C5.2",
					"parentKey": "C5",
					"name": "C5.2 Traduire des objets ou séquences d'actions entre représentations formelles",
					"description": "Être capable d'utiliser un autre langage / code formel pour représenter des objets ou séquences d'actions formellement définis.",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "C6",
					"parentKey": "",
					"name": "C6 Construire une séquence d'actions de manière itérative",
					"description": "Le PIAF est un référentiel de compétences de la Pensée Informatique et Algorithmique dans l'enseignement Fondamental (PIAF). Il est décomposé en 6 compétences maîtresses.",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "C6.1",
					"parentKey": "C6",
					"name": "C6.1 Vérifier si une séquence d'actions atteint un objectif donné",
					"description": "Être capable de vérifier si une séquence d'actions donnée produit ou non le résultat escompté.",
					"constraints": [
						{
							"label": "containsRobot",
							"tag": "player",
							"parameters": []
						}
					],
					"rule": "containsRobot >= 1"
				},
				{
					"key": "C6.2",
					"parentKey": "C6",
					"name": "C6.2 Repérer des erreurs dans une séquence d'actions",
					"description": "En cas de séquence d'actions erronée, être capable de localiser la ou les erreurs.",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "C6.3",
					"parentKey": "C6",
					"name": "C6.3 Corriger une séquence d'actions pour atteindre un objectif donné",
					"description": "A partir d'une séquence d'actions donnée, qui ne permet pas d'atteindre un but donné, être capable de modifier cette séquence d'actions pour atteindre le but.",
					"constraints": [
						{
							"label": "DragDropDisabled",
							"tag": "dragdropDisabled",
							"parameters": []
						},
						{
							"label": "AllScript",
							"tag": "script",
							"parameters": []
						},
						{
							"label": "BuggedScript",
							"tag": "script",
							"parameters": [
								{
									"attribute": "type",
									"constraint": "=",
									"value": "2"
								}
							]
						},
						{
							"label": "ActionInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						}
					],
					"rule": "DragDropDisabled = 0 and AllScript = BuggedScript and ActionInLib >= 1"
				},
				{
					"key": "C6.4",
					"parentKey": "C6",
					"name": "C6.4 Étendre ou modifier une séquence d'actions pour atteindre un nouvel objectif",
					"description": "A partir d'une séquence d'actions donnée dont le résultat est connu (la séquence est complète par rapport à un objectif précédent), pouvoir la réutiliser et l'adapter pour atteindre un autre (nouvel) objectif.",
					"constraints": [
						{
							"label": "RobotsInSameLine",
							"tag": "player",
							"parameters": [
								{
									"attribute": "associatedScriptName",
									"constraint": "sameValue",
									"tag2": "player",
									"attribute2": "associatedScriptName"
								}
							]
						},
						{
							"label": "ActionInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "Forward|TurnLeft|TurnRight|Wait|Activate|TurnBack"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						}
					],
					"rule": "RobotsInSameLine >= 2 and ActionInLib >= 1"
				}
			]
		},
		{
			"name": "CRCN",
			"list": [
				{
					"key": "D3",
					"parentKey": "",
					"name": "DOMAINE 3 : Création de contenus",
					"description": "Le CRCN (Cadre de Référence des Compétences Numériques) est inspiré du cadre européen DigComp 2.1 (Digital Competence Framework for Citizens, 2017). Il est entré en vigueur à la rentrée scolaire 2019. Il est valable de l'école primaire à l'université.<br><br>Un bilan de la maîtrise des compétences numériques des élèves est réalisé en classe de cours moyen deuxième année (CM2) et en classe de sixième pour le cycle 3.<br><br>Il fixe 16 compétences numériques attendues dans 5 domaines d’activité et huit niveaux de maîtrise de ces compétences (article D. 121-1 du code de l’éducation).<br><br>SPY permet de travailler la compétence 3.4 \"Programmer\" du comaine 3 \"Création de contenus\". ",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "C3.4",
					"parentKey": "D3",
					"name": "Compétence 3.4 Programmer",
					"description": "<size=120%>De quoi s’agit-il ? (Décret n°2019-919 du 30 août 2019)</size><br>Écrire des programmes et des algorithmes pour répondre à un besoin (automatiser une tâche répétitive, accomplir des tâches complexes ou chronophages, résoudre un problème logique...) et pour développer un contenu riche (jeu, site web...) avec des environnements de développement informatique simples, des logiciels de planification de tâches...<br><br><size=120%>Références au socle commun de connaissances, de compétences et de culture</size><br><margin=1em>* Savoir que des langages informatiques sont utilisés pour programmer des outils numériques et réaliser des traitements automatiques de données. (Domaine 1– Comprendre, s'exprimer en utilisant les langages mathématiques, scientifiques et informatiques)<br>* Connaître les principes de base de l'algorithmique et de la conception des programmes informatiques. (Domaine 1– Comprendre, s'exprimer en utilisant les langages mathématiques, scientifiques et informatiques)<br>* Mettre en œuvre les principes de base de l'algorithmique pour créer des applications simples. (Domaine 1– Comprendre, s'exprimer en utilisant les langages mathématiques, scientifiques et informatiques)</margin><br><br><size=120%>Thématiques et mots-clés associés (Pix)</size><br>Algorithme et programme ; représentation et codage de l'information ; langages de programmation ; complexité ; pensée algorithmique et informatique ; collecte et exploitation de données massives ; intelligence artificielle et robots.",
					"constraints": [],
					"rule": ""
				},
				{
					"key": "N1",
					"parentKey": "C3.4",
					"name": "Niveau 1",
					"description": "Lire et construire un algorithme qui comprend des instructions simples.<br><br>Application à SPY : Niveaux qui contiennent que des blocs d'action en quantité limitée (pas de blocs de contrôle).",
					"constraints": [
						{
							"label": "AvailableControlInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "IfThen|IfElse|ForLoop|Wait|While|Forever"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "UnlimitedBlockInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "limit",
									"constraint": "=",
									"value": "-1"
								}
							]
						},
						{
							"label": "IfInScript",
							"tag": "if",
							"parameters": []
						},
						{
							"label": "IfElseInScript",
							"tag": "ifElse",
							"parameters": []
						},
						{
							"label": "ForInScript",
							"tag": "for",
							"parameters": []
						},
						{
							"label": "WhileInScript",
							"tag": "while",
							"parameters": []
						},
						{
							"label": "ForeverInScript",
							"tag": "forever",
							"parameters": []
						}
					],
					"rule": "AvailableControlInLib = 0 and UnlimitedBlockInLib = 0 and IfInScript = 0 and IfElseInScript = 0 and ForInScript = 0 and WhileInScript = 0 and ForeverInScript = 0"
				},
				{
					"key": "N2",
					"parentKey": "C3.4",
					"name": "Niveau 2",
					"description": "Réaliser un programme simple.<br><br>Application à SPY : Niveaux qui contiennent que des blocs d'action en quantité illimitée (pas de blocs de contrôle).",
					"constraints": [
						{
							"label": "AvailableControlInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "IfThen|IfElse|ForLoop|Wait|While|Forever"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "UnlimitedBlockInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "limit",
									"constraint": "=",
									"value": "-1"
								}
							]
						},
						{
							"label": "IfInScript",
							"tag": "if",
							"parameters": []
						},
						{
							"label": "IfElseInScript",
							"tag": "ifElse",
							"parameters": []
						},
						{
							"label": "ForInScript",
							"tag": "for",
							"parameters": []
						},
						{
							"label": "WhileInScript",
							"tag": "while",
							"parameters": []
						},
						{
							"label": "ForeverInScript",
							"tag": "forever",
							"parameters": []
						}
					],
					"rule": "AvailableControlInLib = 0 and UnlimitedBlockInLib >= 1 and IfInScript = 0 and IfElseInScript = 0 and ForInScript = 0 and WhileInScript = 0 and ForeverInScript = 0"
				},
				{
					"key": "N3",
					"parentKey": "C3.4",
					"name": "Niveau 3",
					"description": "* Développer un programme pour répondre à un problème à partir d'instructions simples d'un langage de programmation<br>* Modifier un algorithme simple en faisant évoluer ses éléments de programmation<br>* Mettre au point et exécuter un programme simple commandant un système réel ou un système numérique<br><br>Application à SPY : Niveaux qui contiennent des blocs d'action et des structures de contôle à l'exception des structures de contrôle conditionnelles.",
					"constraints": [
						{
							"label": "AvailableLoopControlInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "ForLoop|Forever"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "AvailableConditionalControlInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "IfThen|IfElse|While"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "IfInScript",
							"tag": "if",
							"parameters": []
						},
						{
							"label": "IfElseInScript",
							"tag": "ifElse",
							"parameters": []
						},
						{
							"label": "WhileInScript",
							"tag": "while",
							"parameters": []
						},
						{
							"label": "ForInScript",
							"tag": "for",
							"parameters": []
						},
						{
							"label": "ForeverInScript",
							"tag": "forever",
							"parameters": []
						}
					],
					"rule": "AvailableConditionalControlInLib = 0 and IfInScript = 0 and IfElseInScript = 0 and WhileInScript = 0 and (AvailableLoopControlInLib >= 1 or ForInScript >= 1 or ForeverInScript >= 1)"
				},
				{
					"key": "N4",
					"parentKey": "C3.4",
					"name": "Niveau 4",
					"description": "* Inscrire l'écriture et le développement des programmes dans un travail collaboratif et constructif<br>* Modifier le comportement d'un objet régi par un programme simple<br><br>Application à SPY : Niveaux qui contiennent des blocs d'action et des structures de contrôle conditionnelles (sans les operateurs logiques).",
					"constraints": [
						{
							"label": "AvailableConditionalInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "While|IfThen|IfElse"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "AvailableOperatorInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "AndOperator|OrOperator|NotOperator"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "IfInScript",
							"tag": "if",
							"parameters": []
						},
						{
							"label": "IfElseInScript",
							"tag": "ifElse",
							"parameters": []
						},
						{
							"label": "WhileInScript",
							"tag": "while",
							"parameters": []
						},
						{
							"label": "NotInScript",
							"tag": "not",
							"parameters": []
						},
						{
							"label": "AndInScript",
							"tag": "and",
							"parameters": []
						},
						{
							"label": "OrInScript",
							"tag": "or",
							"parameters": []
						}
					],
					"rule": "AvailableOperatorInLib = 0 and NotInScript = 0 and AndInScript = 0 and OrInScript = 0 and (AvailableConditionalInLib >= 1 or IfInScript >= 1 or IfElseInScript >= 1 or WhileInScript >= 1)"
				},
				{
					"key": "N5",
					"parentKey": "C3.4",
					"name": "Niveau 5",
					"description": "* Créer un programme animant un objet graphique ou réel<br>* Écrire et développer des programmes pour répondre à des problèmes et modéliser des phénomènes physiques, économiques et sociaux<br><br>Application à SPY : Niveaux qui contiennent des blocs d'action et des structures de contrôle incluant des operateurs logiques.",
					"constraints": [
						{
							"label": "AvailableConditionalInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "While|IfThen|IfElse"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "AvailableOperatorInLib",
							"tag": "blockLimit",
							"parameters": [
								{
									"attribute": "blockType",
									"constraint": "include",
									"value": "AndOperator|OrOperator|NotOperator"
								},
								{
									"attribute": "limit",
									"constraint": ">",
									"value": "0"
								}
							]
						},
						{
							"label": "IfInScript",
							"tag": "if",
							"parameters": []
						},
						{
							"label": "IfElseInScript",
							"tag": "ifElse",
							"parameters": []
						},
						{
							"label": "WhileInScript",
							"tag": "while",
							"parameters": []
						},
						{
							"label": "NotInScript",
							"tag": "not",
							"parameters": []
						},
						{
							"label": "AndInScript",
							"tag": "and",
							"parameters": []
						},
						{
							"label": "OrInScript",
							"tag": "or",
							"parameters": []
						}
					],
					"rule": "(AvailableOperatorInLib >= 1 or NotInScript >= 1 or AndInScript >= 1 or OrInScript >= 1) and (AvailableConditionalInLib >= 1 or IfInScript >= 1 or IfElseInScript >= 1 or WhileInScript >= 1)"
				}
			]
		}
	]
}